generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model tb_user {
  id_user    Int         @id @default(autoincrement())
  fullname   String      @db.VarChar(70)
  username   String      @db.VarChar(30)
  gender     String      @db.VarChar(10)
  alamat     String      @db.VarChar(100)
  email      String      @db.VarChar(50)
  password   String
  img_profil String      @db.VarChar(50)
  tb_buku    tb_buku[]
  tb_rating  tb_rating[]
  tb_diskusi tb_diskusi[]
  tb_pinjam  tb_pinjam[]
}

model tb_buku {
  id_user                              Int
  judul_buku                           String       @db.VarChar(100)
  pengarang                            String       @db.VarChar(70)
  publisher                            String       @db.VarChar(50)
  isbn                                 Int
  pages                                Int
  img_buku                             String       @db.VarChar(200)
  id_kategori                          Int?
  id_buku                              Int          @id @default(autoincrement())
  tb_kategori                          tb_kategori? @relation(fields: [id_kategori], references: [id_kategori])
  tb_user                              tb_user      @relation(fields: [id_user], references: [id_user])
  tb_rating                            tb_rating[]
  tb_diskusi                           tb_diskusi[]
  tb_pinjam                            tb_pinjam[]
}

model tb_kategori {
  id_kategori   Int       @id @default(autoincrement())
  nama_kategori String    @db.VarChar(50)
  img_kategori  String    @db.VarChar(200)
  tb_buku       tb_buku[]
}

model tb_rating {
  id_rating                          Int       @id @default(autoincrement())
  rating                             Int
  id_buku                            Int?
  id_user                            Int?
  tb_user                            tb_user?  @relation(fields: [id_user], references: [id_user])
  tb_buku                            tb_buku? @relation(fields: [id_buku], references: [id_buku])


}

model tb_diskusi {
  id_diskusi          Int  @id @default(autoincrement())
  diskusi             String
  id_user             Int?
  id_buku             Int?
  tb_user             tb_user? @relation(fields: [id_user], references: [id_user])
  tb_buku             tb_buku? @relation(fields: [id_buku], references: [id_buku])

}

model tb_pinjam {
  id_pinjam       Int @id @default(autoincrement())
  id_buku         Int?
  id_user         Int?
  tgl_pinjam      DateTime @db.Date
  tgl_kembali     DateTime @db.Date
  status          Boolean?
  tb_user         tb_user? @relation(fields: [id_user], references: [id_user]) 
  tb_buku         tb_buku? @relation(fields: [id_buku], references: [id_buku]) 


}
